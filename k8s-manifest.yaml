apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: capstone
data:
  SQL_HOST: db
  SQL_USERNAME: root
  SQL_PASSWORD: password
  SQL_DATABASE: flask

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: capstone
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capstone-mysql
  namespace: capstone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: capstone-mysql
  template:
    metadata:
      labels:
        app: capstone-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: SQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: SQL_DATABASE
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: capstone-mysql
  namespace: capstone
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: capstone-mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capstone-app
  namespace: capstone
spec:
  replicas: 2
  selector:
    matchLabels:
      app: capstone-app
  template:
    metadata:
      labels:
        app: capstone-app
    spec:
      containers:
      - name: flask-app
        image: ghcr.io/omegawaffle/ift-401-capstone:latest
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: app-config

---
apiVersion: v1
kind: Service
metadata:
  name: capstone-app
  namespace: capstone
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: capstone-app
